/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.InlineObject10;
import org.openapitools.model.InlineObject11;
import org.openapitools.model.InlineObject12;
import org.openapitools.model.InlineObject13;
import org.openapitools.model.InlineObject14;
import org.openapitools.model.InlineObject32;
import org.openapitools.model.InlineObject35;
import org.openapitools.model.InlineObject6;
import org.openapitools.model.InlineObject7;
import org.openapitools.model.InlineObject8;
import org.openapitools.model.InlineObject9;
import org.openapitools.model.InlineResponse20010;
import org.openapitools.model.InlineResponse20011;
import org.openapitools.model.InlineResponse20012;
import org.openapitools.model.InlineResponse20013;
import org.openapitools.model.InlineResponse20014;
import org.openapitools.model.InlineResponse20015;
import org.openapitools.model.InlineResponse20016;
import org.openapitools.model.InlineResponse20034;
import org.openapitools.model.InlineResponse20035;
import org.openapitools.model.InlineResponse20036;
import org.openapitools.model.InlineResponse20037;
import org.openapitools.model.InlineResponse20038;
import org.openapitools.model.InlineResponse20039;
import org.openapitools.model.InlineResponse20040;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-06-06T16:31:21.921210200+08:00[Asia/Shanghai]")

@Validated
@Api(value = "peopleManage", description = "the peopleManage API")
public interface PeopleManageApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /peopleManage/balanceAccountsPayment : 客户结款
     *
     * @param inlineObject14  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "客户结款", nickname = "peopleManageBalanceAccountsPaymentPost", notes = "", response = InlineResponse20016.class, tags={ "peopleManage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20016.class) })
    @RequestMapping(value = "/peopleManage/balanceAccountsPayment",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse20016> peopleManageBalanceAccountsPaymentPost(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject14 inlineObject14) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"payableAmount\" : \"payableAmount\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /peopleManage/checkCustomInformation : 客户信息查询
     *
     * @param token  (optional)
     * @param inlineObject8  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "客户信息查询", nickname = "peopleManageCheckCustomInformationPost", notes = "", response = InlineResponse20012.class, tags={ "peopleManage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20012.class) })
    @RequestMapping(value = "/peopleManage/checkCustomInformation",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse20012> peopleManageCheckCustomInformationPost(@ApiParam(value = "" ) @RequestHeader(value="token", required=false) String token,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject8 inlineObject8) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"customList\" : [ { \"contactPersonName\" : \"contactPersonName\", \"address\" : \"address\", \"phone\" : \"phone\", \"companyName\" : \"companyName\", \"remark\" : \"remark\", \"customId\" : 0, \"payableAmount\" : 6.027456183070403, \"email\" : \"email\" }, { \"contactPersonName\" : \"contactPersonName\", \"address\" : \"address\", \"phone\" : \"phone\", \"companyName\" : \"companyName\", \"remark\" : \"remark\", \"customId\" : 0, \"payableAmount\" : 6.027456183070403, \"email\" : \"email\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /peopleManage/checkCustomTransaction : 客户流水信息查询
     *
     * @param token  (optional)
     * @param inlineObject9  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "客户流水信息查询", nickname = "peopleManageCheckCustomTransactionPost", notes = "", response = InlineResponse20013.class, tags={ "peopleManage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20013.class) })
    @RequestMapping(value = "/peopleManage/checkCustomTransaction",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse20013> peopleManageCheckCustomTransactionPost(@ApiParam(value = "" ) @RequestHeader(value="token", required=false) String token,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject9 inlineObject9) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"transactionList\" : [ { \"phone\" : \"phone\", \"contactName\" : \"contactName\", \"transactionAmount\" : 6.027456183070403, \"bankCardNum\" : \"bankCardNum\", \"bankName\" : \"bankName\", \"time\" : \"time\", \"transactionId\" : 0 }, { \"phone\" : \"phone\", \"contactName\" : \"contactName\", \"transactionAmount\" : 6.027456183070403, \"bankCardNum\" : \"bankCardNum\", \"bankName\" : \"bankName\", \"time\" : \"time\", \"transactionId\" : 0 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /peopleManage/checkFetchOutPeopleInformation : 出库人信息查询
     *
     * @param token  (optional)
     * @param inlineObject7  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "出库人信息查询", nickname = "peopleManageCheckFetchOutPeopleInformationPost", notes = "", response = InlineResponse20011.class, tags={ "peopleManage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20011.class) })
    @RequestMapping(value = "/peopleManage/checkFetchOutPeopleInformation",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse20011> peopleManageCheckFetchOutPeopleInformationPost(@ApiParam(value = "" ) @RequestHeader(value="token", required=false) String token,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject7 inlineObject7) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"outBoundPeopleList\" : [ { \"address\" : \"address\", \"phone\" : \"phone\", \"outBoundPersonId\" : 0, \"name\" : \"name\", \"remark\" : \"remark\", \"userName\" : \"userName\", \"email\" : \"email\" }, { \"address\" : \"address\", \"phone\" : \"phone\", \"outBoundPersonId\" : 0, \"name\" : \"name\", \"remark\" : \"remark\", \"userName\" : \"userName\", \"email\" : \"email\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /peopleManage/checkInBoundPeopleInformation : 入库人信息查询
     * 查找入库交接人信息
     *
     * @param token 鉴权token (optional)
     * @param inlineObject6  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "入库人信息查询", nickname = "peopleManageCheckInBoundPeopleInformationPost", notes = "查找入库交接人信息", response = InlineResponse20010.class, tags={ "peopleManage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20010.class) })
    @RequestMapping(value = "/peopleManage/checkInBoundPeopleInformation",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse20010> peopleManageCheckInBoundPeopleInformationPost(@ApiParam(value = "鉴权token" ) @RequestHeader(value="token", required=false) String token,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject6 inlineObject6) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"inBoundPeopleList\" : [ { \"address\" : \"address\", \"inBoundPersonId\" : \"inBoundPersonId\", \"phone\" : \"phone\", \"name\" : \"name\", \"remark\" : \"remark\", \"userName\" : \"userName\", \"email\" : \"email\" }, { \"address\" : \"address\", \"inBoundPersonId\" : \"inBoundPersonId\", \"phone\" : \"phone\", \"name\" : \"name\", \"remark\" : \"remark\", \"userName\" : \"userName\", \"email\" : \"email\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /peopleManage/checkStaffInformation : 员工（即用户）信息查询
     *
     * @param token  (optional)
     * @param inlineObject32  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "员工（即用户）信息查询", nickname = "peopleManageCheckStaffInformationPost", notes = "", response = InlineResponse20034.class, tags={ "peopleManage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20034.class) })
    @RequestMapping(value = "/peopleManage/checkStaffInformation",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse20034> peopleManageCheckStaffInformationPost(@ApiParam(value = "" ) @RequestHeader(value="token", required=false) String token,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject32 inlineObject32) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"staffList\" : [ { \"warehouseId\" : \"warehouseId\", \"phone\" : \"phone\", \"name\" : \"name\", \"userName\" : \"userName\", \"warehouseName\" : \"warehouseName\", \"transferStation\" : \"transferStation\", \"email\" : \"email\" }, { \"warehouseId\" : \"warehouseId\", \"phone\" : \"phone\", \"name\" : \"name\", \"userName\" : \"userName\", \"warehouseName\" : \"warehouseName\", \"transferStation\" : \"transferStation\", \"email\" : \"email\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /peopleManage/delCustomInformation : 删除客户数据项
     *
     * @param token  (optional)
     * @param inlineObject10  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "删除客户数据项", nickname = "peopleManageDelCustomInformationDelete", notes = "", response = InlineResponse20014.class, tags={ "peopleManage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20014.class) })
    @RequestMapping(value = "/peopleManage/delCustomInformation",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    default ResponseEntity<InlineResponse20014> peopleManageDelCustomInformationDelete(@ApiParam(value = "" ) @RequestHeader(value="token", required=false) String token,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject10 inlineObject10) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /peopleManage/delFetchInPeopleInformation : 删除入库核实人信息
     *
     * @param token token (optional)
     * @param inlineObject11  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "删除入库核实人信息", nickname = "peopleManageDelFetchInPeopleInformationDelete", notes = "", response = InlineResponse20015.class, tags={ "peopleManage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20015.class) })
    @RequestMapping(value = "/peopleManage/delFetchInPeopleInformation",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    default ResponseEntity<InlineResponse20015> peopleManageDelFetchInPeopleInformationDelete(@ApiParam(value = "token" ) @RequestHeader(value="token", required=false) String token,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject11 inlineObject11) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /peopleManage/delFetchOutPeopleInformation : 删除出库核实人信息
     *
     * @param token token (optional)
     * @param inlineObject12  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "删除出库核实人信息", nickname = "peopleManageDelFetchOutPeopleInformationDelete", notes = "", response = InlineResponse20015.class, tags={ "peopleManage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20015.class) })
    @RequestMapping(value = "/peopleManage/delFetchOutPeopleInformation",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    default ResponseEntity<InlineResponse20015> peopleManageDelFetchOutPeopleInformationDelete(@ApiParam(value = "token" ) @RequestHeader(value="token", required=false) String token,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject12 inlineObject12) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /peopleManage/delStaffInformation : 删除员工信息
     *
     * @param token  (optional)
     * @param inlineObject35  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "删除员工信息", nickname = "peopleManageDelStaffInformationDelete", notes = "", response = InlineResponse20015.class, tags={ "peopleManage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20015.class) })
    @RequestMapping(value = "/peopleManage/delStaffInformation",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    default ResponseEntity<InlineResponse20015> peopleManageDelStaffInformationDelete(@ApiParam(value = "" ) @RequestHeader(value="token", required=false) String token,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject35 inlineObject35) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /peopleManage/getCustomInformationAll : 获取客户所有信息
     *
     * @param token  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "获取客户所有信息", nickname = "peopleManageGetCustomInformationAllGet", notes = "", response = InlineResponse20037.class, tags={ "peopleManage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20037.class) })
    @RequestMapping(value = "/peopleManage/getCustomInformationAll",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse20037> peopleManageGetCustomInformationAllGet(@ApiParam(value = "" ) @RequestHeader(value="token", required=false) String token) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"customList\" : [ { \"contactPersonName\" : \"contactPersonName\", \"address\" : \"address\", \"phone\" : \"phone\", \"companyName\" : \"companyName\", \"remark\" : \"remark\", \"customId\" : \"customId\", \"payableAmount\" : \"payableAmount\", \"email\" : \"email\" }, { \"contactPersonName\" : \"contactPersonName\", \"address\" : \"address\", \"phone\" : \"phone\", \"companyName\" : \"companyName\", \"remark\" : \"remark\", \"customId\" : \"customId\", \"payableAmount\" : \"payableAmount\", \"email\" : \"email\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /peopleManage/getCustomNameList : 获取客户姓名列表
     *
     * @param token  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "获取客户姓名列表", nickname = "peopleManageGetCustomNameListGet", notes = "", response = InlineResponse20040.class, tags={ "peopleManage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20040.class) })
    @RequestMapping(value = "/peopleManage/getCustomNameList",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse20040> peopleManageGetCustomNameListGet(@ApiParam(value = "" ) @RequestHeader(value="token", required=false) String token) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"customNameList\" : [ \"customNameList\", \"customNameList\" ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /peopleManage/getFetchOutPeopleInformationAll : 获取出库人所有信息
     *
     * @param token token (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "获取出库人所有信息", nickname = "peopleManageGetFetchOutPeopleInformationAllGet", notes = "", response = InlineResponse20036.class, tags={ "peopleManage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20036.class) })
    @RequestMapping(value = "/peopleManage/getFetchOutPeopleInformationAll",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse20036> peopleManageGetFetchOutPeopleInformationAllGet(@ApiParam(value = "token" ) @RequestHeader(value="token", required=false) String token) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"outBoundPeopleList\" : [ { \"address\" : \"address\", \"phone\" : \"phone\", \"outBoundPersonId\" : \"outBoundPersonId\", \"name\" : \"name\", \"remark\" : \"remark\", \"userName\" : \"userName\", \"email\" : \"email\" }, { \"address\" : \"address\", \"phone\" : \"phone\", \"outBoundPersonId\" : \"outBoundPersonId\", \"name\" : \"name\", \"remark\" : \"remark\", \"userName\" : \"userName\", \"email\" : \"email\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /peopleManage/getInBoundPeopleInformationAll : 获取入库人所有信息
     *
     * @param token token (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "获取入库人所有信息", nickname = "peopleManageGetInBoundPeopleInformationAllGet", notes = "", response = InlineResponse20035.class, tags={ "peopleManage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20035.class) })
    @RequestMapping(value = "/peopleManage/getInBoundPeopleInformationAll",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse20035> peopleManageGetInBoundPeopleInformationAllGet(@ApiParam(value = "token" ) @RequestHeader(value="token", required=false) String token) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"inBoundPeopleList\" : [ { \"address\" : \"address\", \"inBoundPersonId\" : \"inBoundPersonId\", \"phone\" : \"phone\", \"name\" : \"name\", \"remark\" : \"remark\", \"userName\" : \"userName\", \"email\" : \"email\" }, { \"address\" : \"address\", \"inBoundPersonId\" : \"inBoundPersonId\", \"phone\" : \"phone\", \"name\" : \"name\", \"remark\" : \"remark\", \"userName\" : \"userName\", \"email\" : \"email\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /peopleManage/getStaffInformationAll : 获取员工所有信息
     *
     * @param token  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "获取员工所有信息", nickname = "peopleManageGetStaffInformationAllGet", notes = "", response = InlineResponse20038.class, tags={ "peopleManage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20038.class) })
    @RequestMapping(value = "/peopleManage/getStaffInformationAll",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse20038> peopleManageGetStaffInformationAllGet(@ApiParam(value = "") @Valid @RequestParam(value = "token", required = false) String token) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"staffList\" : [ { \"warehouseId\" : \"warehouseId\", \"phone\" : \"phone\", \"name\" : \"name\", \"userName\" : \"userName\", \"warehouseName\" : \"warehouseName\", \"transferStation\" : \"transferStation\", \"email\" : \"email\" }, { \"warehouseId\" : \"warehouseId\", \"phone\" : \"phone\", \"name\" : \"name\", \"userName\" : \"userName\", \"warehouseName\" : \"warehouseName\", \"transferStation\" : \"transferStation\", \"email\" : \"email\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /peopleManage/getStaffNameList : 获取员工姓名列表
     *
     * @param token  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "获取员工姓名列表", nickname = "peopleManageGetStaffNameListGet", notes = "", response = InlineResponse20039.class, tags={ "peopleManage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20039.class) })
    @RequestMapping(value = "/peopleManage/getStaffNameList",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse20039> peopleManageGetStaffNameListGet(@ApiParam(value = "") @Valid @RequestParam(value = "token", required = false) String token) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"staffNameList\" : [ \"staffNameList\", \"staffNameList\" ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /peopleManage/incAccountsPayment : 增加客户应付款
     *
     * @param token token (optional)
     * @param inlineObject13  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "增加客户应付款", nickname = "peopleManageIncAccountsPaymentPost", notes = "", response = InlineResponse20016.class, tags={ "peopleManage", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20016.class) })
    @RequestMapping(value = "/peopleManage/incAccountsPayment",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse20016> peopleManageIncAccountsPaymentPost(@ApiParam(value = "token" ) @RequestHeader(value="token", required=false) String token,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject13 inlineObject13) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"payableAmount\" : \"payableAmount\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
