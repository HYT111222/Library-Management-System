/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.InlineObject;
import org.openapitools.model.InlineObject1;
import org.openapitools.model.InlineObject15;
import org.openapitools.model.InlineResponse200;
import org.openapitools.model.InlineResponse2001;
import org.openapitools.model.InlineResponse20017;
import org.openapitools.model.InlineResponse20022;
import org.openapitools.model.InlineResponse20023;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-06-06T16:31:21.921210200+08:00[Asia/Shanghai]")

@Validated
@Api(value = "user", description = "the user API")
public interface UserApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /user/login : 用户登录
     *
     * @param inlineObject  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "用户登录", nickname = "userLoginPost", notes = "", response = InlineResponse200.class, tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse200.class) })
    @RequestMapping(value = "/user/login",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse200> userLoginPost(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject inlineObject) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"user_id\" : \"user_id\", \"authority\" : \"authority\", \"userName\" : \"userName\", \"token\" : \"token\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /user/managerHomePage : 管理员首页信息获取
     *
     * @param token 用户鉴权 (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "管理员首页信息获取", nickname = "userManagerHomePageGet", notes = "", response = InlineResponse20022.class, tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20022.class) })
    @RequestMapping(value = "/user/managerHomePage",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse20022> userManagerHomePageGet(@ApiParam(value = "用户鉴权" ) @RequestHeader(value="token", required=false) String token) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"companyNum\" : 1, \"status_code\" : true, \"shelfNum\" : 6, \"outPeopleNum\" : 5, \"inPeopleNum\" : 5, \"staffNum\" : 0 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /user/registerManager : 管理员注册
     *
     * @param inlineObject15  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "管理员注册", nickname = "userRegisterManagerPost", notes = "", response = InlineResponse20017.class, tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20017.class) })
    @RequestMapping(value = "/user/registerManager",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse20017> userRegisterManagerPost(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject15 inlineObject15) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"errorMag\" : \"errorMag\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /user/register : 普通用户注册
     *
     * @param inlineObject1  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "普通用户注册", nickname = "userRegisterPost", notes = "", response = InlineResponse2001.class, tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse2001.class) })
    @RequestMapping(value = "/user/register",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse2001> userRegisterPost(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject1 inlineObject1) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"errorMag\" : \"errorMag\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /user/userHomePage : 普通用户首页获取信息
     *
     * @param token  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "普通用户首页获取信息", nickname = "userUserHomePageGet", notes = "", response = InlineResponse20023.class, tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20023.class) })
    @RequestMapping(value = "/user/userHomePage",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse20023> userUserHomePageGet(@ApiParam(value = "" ) @RequestHeader(value="token", required=false) String token) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"companyNum\" : 6, \"status_code\" : true, \"shelfNum\" : 0, \"outPeopleNum\" : 5, \"inPeopleNum\" : 1, \"managerName\" : \"managerName\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
