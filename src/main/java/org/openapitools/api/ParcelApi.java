/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.InlineObject16;
import org.openapitools.model.InlineObject17;
import org.openapitools.model.InlineObject18;
import org.openapitools.model.InlineResponse20018;
import org.openapitools.model.InlineResponse20019;
import org.openapitools.model.InlineResponse20020;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-06-06T16:31:21.921210200+08:00[Asia/Shanghai]")

@Validated
@Api(value = "parcel", description = "the parcel API")
public interface ParcelApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * DELETE /parcel/deleteParcel : 删除包裹
     *
     * @param inlineObject18  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "删除包裹", nickname = "parcelDeleteParcelDelete", notes = "", response = InlineResponse20020.class, tags={ "parcel", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20020.class) })
    @RequestMapping(value = "/parcel/deleteParcel",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    default ResponseEntity<InlineResponse20020> parcelDeleteParcelDelete(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject18 inlineObject18) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /parcel/searchParcelDetail : 包裹详细信息查询
     *
     * @param token 用户鉴权 (optional)
     * @param inlineObject17  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "包裹详细信息查询", nickname = "parcelSearchParcelDetailGet", notes = "", response = InlineResponse20019.class, tags={ "parcel", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20019.class) })
    @RequestMapping(value = "/parcel/searchParcelDetail",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse20019> parcelSearchParcelDetailGet(@ApiParam(value = "用户鉴权" ) @RequestHeader(value="token", required=false) String token,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject17 inlineObject17) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"inTime\" : \"inTime\", \"parcelState\" : \"parcelState\", \"shelfId\" : \"shelfId\", \"shelfNumber\" : \"shelfNumber\", \"outTime\" : \"outTime\", \"parcelId\" : \"parcelId\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /parcel/searchParcel : 包裹查询
     * 包裹id,货架名称，包裹状态等信息不需要全部输入，按实际输入情况查询。
     *
     * @param token 用户鉴权 (optional)
     * @param inlineObject16  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "包裹查询", nickname = "parcelSearchParcelPost", notes = "包裹id,货架名称，包裹状态等信息不需要全部输入，按实际输入情况查询。", response = InlineResponse20018.class, tags={ "parcel", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20018.class) })
    @RequestMapping(value = "/parcel/searchParcel",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse20018> parcelSearchParcelPost(@ApiParam(value = "用户鉴权" ) @RequestHeader(value="token", required=false) String token,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject16 inlineObject16) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"parcelInformation\" : [ { \"consigneeName\" : \"consigneeName\", \"shipperPhone\" : \"shipperPhone\", \"consigneePhone\" : \"consigneePhone\", \"shipperName\" : \"shipperName\", \"shipperAddress\" : \"shipperAddress\", \"parcelId\" : \"parcelId\", \"consigneeAddress\" : \"consigneeAddress\" }, { \"consigneeName\" : \"consigneeName\", \"shipperPhone\" : \"shipperPhone\", \"consigneePhone\" : \"consigneePhone\", \"shipperName\" : \"shipperName\", \"shipperAddress\" : \"shipperAddress\", \"parcelId\" : \"parcelId\", \"consigneeAddress\" : \"consigneeAddress\" } ], \"status_code\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
