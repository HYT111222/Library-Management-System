/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.InlineObject19;
import org.openapitools.model.InlineObject24;
import org.openapitools.model.InlineObject25;
import org.openapitools.model.InlineObject26;
import org.openapitools.model.InlineObject27;
import org.openapitools.model.InlineResponse20020;
import org.openapitools.model.InlineResponse20021;
import org.openapitools.model.InlineResponse20025;
import org.openapitools.model.InlineResponse20028;
import org.openapitools.model.InlineResponse20029;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-06-06T16:31:21.921210200+08:00[Asia/Shanghai]")

@Validated
@Api(value = "regionAndShelf", description = "the regionAndShelf API")
public interface RegionAndShelfApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /regionAndShelf/addShelf : 添加货架数量
     *
     * @param token 用户鉴权 (optional)
     * @param inlineObject25  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "添加货架数量", nickname = "regionAndShelfAddShelfPost", notes = "", response = InlineResponse20028.class, tags={ "regionAndShelf", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20028.class) })
    @RequestMapping(value = "/regionAndShelf/addShelf",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse20028> regionAndShelfAddShelfPost(@ApiParam(value = "用户鉴权" ) @RequestHeader(value="token", required=false) String token,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject25 inlineObject25) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"shelfNumber\" : \"shelfNumber\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /regionAndShelf/allShelf : 获得该库区全部货架信息
     *
     * @param token 用户鉴权 (optional)
     * @param inlineObject26  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "获得该库区全部货架信息", nickname = "regionAndShelfAllShelfGet", notes = "", response = InlineResponse20029.class, tags={ "regionAndShelf", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20029.class) })
    @RequestMapping(value = "/regionAndShelf/allShelf",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse20029> regionAndShelfAllShelfGet(@ApiParam(value = "用户鉴权" ) @RequestHeader(value="token", required=false) String token,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject26 inlineObject26) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"shelfList\" : [ { \"shelfId\" : \"shelfId\", \"regionId\" : \"regionId\", \"shelfCapacity\" : \"shelfCapacity\", \"shelfAllowance\" : \"shelfAllowance\" }, { \"shelfId\" : \"shelfId\", \"regionId\" : \"regionId\", \"shelfCapacity\" : \"shelfCapacity\", \"shelfAllowance\" : \"shelfAllowance\" } ], \"status_code\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /regionAndShelf/deleteShelf : 删除货架（只有货架为空时才能做到）
     *
     * @param token 用户鉴权 (optional)
     * @param inlineObject27  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "删除货架（只有货架为空时才能做到）", nickname = "regionAndShelfDeleteShelfDelete", notes = "", response = InlineResponse20020.class, tags={ "regionAndShelf", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20020.class) })
    @RequestMapping(value = "/regionAndShelf/deleteShelf",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    default ResponseEntity<InlineResponse20020> regionAndShelfDeleteShelfDelete(@ApiParam(value = "用户鉴权" ) @RequestHeader(value="token", required=false) String token,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject27 inlineObject27) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /regionAndShelf/searchRegion : 查找对应库区信息
     *
     * @param token 用户鉴权 (optional)
     * @param inlineObject19  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "查找对应库区信息", nickname = "regionAndShelfSearchRegionGet", notes = "", response = InlineResponse20021.class, tags={ "regionAndShelf", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20021.class) })
    @RequestMapping(value = "/regionAndShelf/searchRegion",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse20021> regionAndShelfSearchRegionGet(@ApiParam(value = "用户鉴权" ) @RequestHeader(value="token", required=false) String token,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject19 inlineObject19) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"regionId\" : \"regionId\", \"regionName\" : \"regionName\", \"shelfNumber\" : \"shelfNumber\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /regionAndShelf/searchShelf : 查询货架信息
     *
     * @param token 用户鉴权 (optional)
     * @param inlineObject24  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "查询货架信息", nickname = "regionAndShelfSearchShelfGet", notes = "", response = InlineResponse20025.class, tags={ "regionAndShelf", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "成功", response = InlineResponse20025.class) })
    @RequestMapping(value = "/regionAndShelf/searchShelf",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse20025> regionAndShelfSearchShelfGet(@ApiParam(value = "用户鉴权" ) @RequestHeader(value="token", required=false) String token,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) InlineObject24 inlineObject24) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status_code\" : true, \"shelfId\" : \"shelfId\", \"regionId\" : \"regionId\", \"shelfCapacity\" : \"shelfCapacity\", \"shelfAllowance\" : \"shelfAllowance\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
